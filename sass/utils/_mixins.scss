@mixin flex ($justify: center, $align: center) {
    display: flex;
    justify-content: $justify;    // general rule (that most of our flex container s will use) 
    align-items: $align;
    height: 100%;                // of container
}

// By default 2 equal columns
@mixin grid ($grid-col: $grid-base, $grid-line: 0, $gap: $grid-gap-base) {
    display: grid;
    grid-template-columns: $grid-col;
    @if ($grid-line != 0) {
        grid-template-rows: $grid-line;
    }
    gap: $gap;
    justify-content: center;
    align-items: center;
    height: 100%;

    @include tablet-only {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;
    }
}

@mixin background-txt ($colour: $color-primary) {
    background-color: $colour;
    @if (lightness($colour) < 50%) {
        color: $color-white;
    }
    @else {
        color: $color-text-dark;
    }
}

// base button
@mixin btn {
    display: inline-block;
    padding: 1rem 3rem;             // top-bottom   left-right
    cursor: pointer;
    @include background-txt;
    border: none;
    border-radius: 5px;
    &--outline {
        background: transparent;
        border: 1px $color-white solid;
    }
    &--primary {
        @include background-txt($color-primary);
    }
    &--secondary {
        @include background-txt($color-secondary);
    }
    &--dark {
        @include background-txt($color-dark);
    }
    &--light {
        @include background-txt($color-light);
    }
    &:hover {
        transform: scale(0.98);
    }
}

@mixin text-center {
    text-align: center;
}

/* margin top-bottom */
@mixin margin-y($size) {
    margin: map-get($map: $margin, $key: $size) 0;
}

/* margin all around */
@mixin margin($size) {
    margin: map-get($map: $margin, $key: $size) map-get($map: $margin, $key: $size);
}

/* margin top-bottom */
@mixin padding-y($size) {
    padding: map-get($map: $padding, $key: $size) 0;
}

/* margin all around */
@mixin padding($size) {
    padding: map-get($map: $padding, $key: $size) map-get($map: $padding, $key: $size);
}

@mixin text-size($size) {
    font-size: map-get($map: $text-sizes, $key: $size);
}

/* Media queries */
/* Mobile */
@mixin mobile-only {
    @media screen and (max-width: map-get($breakpoints, mobile)) {
        @content;
    }
}
/* Tablets and under */
@mixin tablet-only {
    @media screen and (max-width: map-get($breakpoints, tablet)) {
        @content;
    }
}
